---
import { themes } from "../themes";
import UmamiAnalyticsHead from "../components/UmamiAnalyticsHead.astro";
import UmamiAnalyticsBody from "../components/UmamiAnalyticsBody.astro";

interface Props {
    title: string;
    description: string;
    disableDefaultBackground?: boolean;
}

const { title, description, disableDefaultBackground } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content={description} />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Fira+Mono:wght@400;500;700&display=swap"
            rel="stylesheet"
        />
        <title>{title}</title>
        <UmamiAnalyticsHead />
        <script is:inline set:html={`
            const themes = ${JSON.stringify(themes)};
            const getTheme = () => {
                const theme = localStorage.getItem("theme");
                if (theme && (theme === 'light' || theme === 'dark')) {
                    return theme;
                }
                return window.matchMedia("(prefers-color-scheme: light)").matches ? 'light' : 'dark';
            };
            const setTheme = (theme) => {
                const root = document.documentElement;
                const themeColors = themes[theme];
                for (const [key, value] of Object.entries(themeColors)) {
                    root.style.setProperty('--theme-' + key, value);
                }
                if (theme === 'light') {
                    root.classList.add('light');
                } else {
                    root.classList.remove('light');
                }
                localStorage.setItem("theme", theme);
            };
            const theme = getTheme();
            setTheme(theme);
            document.addEventListener('astro:after-swap', () => setTheme(getTheme()));
        `} />
        <style>
            body {
                font-family: "Fira Mono", monospace;
                line-height: 1.6;
            }
            ::selection {
                background: var(--theme-overlay);
                color: var(--theme-text);
            }
            /* Scrollbar styling */
            /* For Webkit browsers (Chrome, Safari, Edge) */
            ::-webkit-scrollbar {
                width: 10px;
            }
            ::-webkit-scrollbar-track {
                background: var(--theme-surface);
            }
            ::-webkit-scrollbar-thumb {
                background: var(--theme-overlay);
                border-radius: 4px;
            }
            ::-webkit-scrollbar-thumb:hover {
                background: var(--theme-muted);
            }
            /* For Firefox */
            * {
                scrollbar-color: var(--theme-overlay) var(--theme-surface); /* thumb track */
                scrollbar-width: thin;
            }
        </style>
    </head>
    <body
        class={!disableDefaultBackground ? "bg-base text-text" : ""}
    >
        <slot />
        <UmamiAnalyticsBody />
    </body>
</html>
